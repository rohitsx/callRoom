version: "3.9"

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    labels:
      - "com.github.nginx-proxy.nginx-proxy=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy-data/certs:/etc/nginx/certs:ro
      - ./nginx-proxy-data/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy-data/html:/usr/share/nginx/html
    networks:
      - app-network
    restart: unless-stopped

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx-proxy-data/acme:/etc/acme.sh
      - ./nginx-proxy-data/certs:/etc/nginx/certs:rw
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=rohitbindw@gmail.com
    networks:
      - app-network
    restart: unless-stopped

  app-nginx:
    image: nginx:alpine
    container_name: app-nginx
    depends_on:
      - php
      - websocket
    volumes:
      - ./code:/var/www/html
      - ./nginx_config/app.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - VIRTUAL_HOST=callroom.devrohit.tech
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=callroom.devrohit.tech
      - LETSENCRYPT_EMAIL=rohitbindw@gmail.com
    expose:
      - "80"
    networks:
      - app-network
    restart: unless-stopped

  php:
    build: ./code/
    container_name: php-fpm
    expose:
      - 9000
    volumes:
      - ./code:/var/www/html
    networks:
      - app-network
    restart: unless-stopped

  websocket:
    build: ./code/
    container_name: websocket-server
    command: sh -c "if [ ! -d vendor ]; then composer install --no-dev --optimize-autoloader; fi && php /var/www/html/ws/Ws.php"
    working_dir: /var/www/html
    expose:
      - 8080
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: pass123
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: pass123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
